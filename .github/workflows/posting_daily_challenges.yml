name: posting_daily_challenges

on:
  schedule:
    - cron: '25 3 * * *'
  workflow_dispatch:

jobs:
  select-environment:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.set-env-step.outputs.ENV_NAME }}  # Referencing the output from the step
    steps:
      - name: Determine environment
        id: set-env-step  # Make sure to reference this id when setting the output
        run: |
          # Check if running on the default branch
          if [[ "${{ github.ref }}" == "refs/heads/${{ github.event.repository.default_branch }}" ]]; then
            if [[ "${{ github.event_name }}" == "schedule" ]]; then
              ENV_NAME="production"  # For schedule trigger on default branch
            else
              ENV_NAME="staging"  # For manual trigger on default branch
            fi
          else
            ENV_NAME="development"
          fi
          
          # Set the environment variable as step output
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT

  posting_the_daily_challenge_of_today:
    runs-on: ubuntu-latest
    needs: select-environment  # Ensuring this job runs after select-environment
    environment: ${{ needs.select-environment.outputs.ENV_NAME }}  # Dynamic assignment to the 'name' of the environment
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install Dependencies
      run: pip install -r requirements.txt --no-cache-dir

    - name: Run Python Script
      env:  ${{ secrets }} # this is absurd but works
      run: python main.py

  if-evoked-from-schedule-then-checkout-from-staging-branch-and-run:
    if: github.event_name == 'schedule'  # This ensures the job runs only for scheduled events
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout a staging branch
        uses: actions/checkout@v4
        with:
          ref: staging  # Specify the branch you want to check out (e.g., staging)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
  
      - name: Install Dependencies
        run: pip install -r requirements.txt --no-cache-dir
  
      - name: Run Python Script
        env:  ${{ secrets }} # this is absurd but works
        run: python main.py
